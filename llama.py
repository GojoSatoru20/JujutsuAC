import streamlit as st
import openai
import json
import os

# --- –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∏ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ---
CONFIG_FILE = "openrouter_config.json"
DEFAULT_MODELS = [
    "deepseek/deepseek-r1:free",
    "meta-llama/llama-4-maverick:free",
    "meta-llama/llama-4-scout:free",
    "google/gemini-2.5-pro-exp-03-25:free",
    "google/gemini-2.0-pro-exp-02-05:free",
    "deepseek/deepseek-chat-v3-0324:free",
    "google/gemma-3-27b-it:free",
    "qwen/qwq-32b:free",
    "deepseek/deepseek-r1-0528-qwen3-8b:free",
    # –î–æ–±–∞–≤—å—Ç–µ —Å—é–¥–∞ –¥—Ä—É–≥–∏–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ –º–æ–¥–µ–ª–∏ —Å OpenRouter
    # –§–æ—Ä–º–∞—Ç: "–∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä/–º–æ–¥–µ–ª–∏:–≤–µ—Ä—Å–∏—è" (–µ—Å–ª–∏ –µ—Å—Ç—å)
    # –°–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π: https://openrouter.ai/models
]

OPENROUTER_BASE_URL = "https://openrouter.ai/api/v1"

# --- –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π ---

def load_config():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ JSON —Ñ–∞–π–ª–∞."""
    if os.path.exists(CONFIG_FILE):
        try:
            with open(CONFIG_FILE, 'r') as f:
                # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –ø—É—Å—Ç–æ–π —Ñ–∞–π–ª
                content = f.read()
                if not content:
                    return {}
                return json.loads(content)
        except json.JSONDecodeError:
            st.error(f"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ {CONFIG_FILE}. –§–∞–π–ª –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞–Ω –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏.")
            return {} # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ª–æ–≤–∞—Ä—å –ø—Ä–∏ –æ—à–∏–±–∫–µ
        except Exception as e:
            st.error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
            return {}
    return {}

def save_config(config):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤ JSON —Ñ–∞–π–ª."""
    try:
        with open(CONFIG_FILE, 'w') as f:
            json.dump(config, f, indent=4)
    except Exception as e:
        st.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é: {e}")

# --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ---

st.set_page_config(page_title="OpenRouter Chat", layout="wide")
st.title("üí¨ –õ–æ–∫–∞–ª—å–Ω—ã–π –ß–∞—Ç —Å OpenRouter")
st.caption("–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –º–æ–¥–µ–ª—è–º–∏ —á–µ—Ä–µ–∑ API OpenRouter.ai")

# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
config = load_config()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —á–∞—Ç–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫
if "messages" not in st.session_state:
    st.session_state.messages = []

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–æ–¥–µ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: —Å–Ω–∞—á–∞–ª–∞ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞, –ø–æ—Ç–æ–º –ø–µ—Ä–≤—É—é –∏–∑ —Å–ø–∏—Å–∫–∞
default_model = config.get("last_selected_model", DEFAULT_MODELS[0] if DEFAULT_MODELS else "")
if default_model not in DEFAULT_MODELS and DEFAULT_MODELS: # –ï—Å–ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π –Ω–µ—Ç –≤ —Ç–µ–∫—É—â–µ–º —Å–ø–∏—Å–∫–µ
    default_model = DEFAULT_MODELS[0]
elif not DEFAULT_MODELS: # –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π –ø—É—Å—Ç
     default_model = ""

if "selected_model" not in st.session_state:
    st.session_state.selected_model = default_model
if "api_key" not in st.session_state:
    st.session_state.api_key = config.get("api_key", "")
if "site_url" not in st.session_state:
     st.session_state.site_url = config.get("site_url", "")
if "site_name" not in st.session_state:
     st.session_state.site_name = config.get("site_name", "")

# --- –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ ---
with st.sidebar:
    st.header("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ OpenRouter")

    # –í–≤–æ–¥ API –∫–ª—é—á–∞
    api_key_input = st.text_input(
        "OpenRouter API Key",
        type="password",
        value=st.session_state.api_key,
        key="api_key_input_widget", # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á –¥–ª—è –≤–∏–¥–∂–µ—Ç–∞
        help="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à API –∫–ª—é—á —Å OpenRouter.ai. –ö–ª—é—á —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–æ –≤ `openrouter_config.json`."
    )
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–ª—é—á, –µ—Å–ª–∏ –æ–Ω –∏–∑–º–µ–Ω–∏–ª—Å—è
    if api_key_input != st.session_state.api_key:
        st.session_state.api_key = api_key_input
        config["api_key"] = api_key_input
        save_config(config)
        # –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º rerun(), —á—Ç–æ–±—ã –Ω–µ –ø—Ä–µ—Ä—ã–≤–∞—Ç—å –≤–≤–æ–¥

    # –í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏
    if DEFAULT_MODELS: # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –Ω–µ –ø—É—Å—Ç
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω–¥–µ–∫—Å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–∞—è –º–æ–¥–µ–ª—å –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ
        try:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ session_state –¥–ª—è –∏–Ω–¥–µ–∫—Å–∞
            current_model_in_state = st.session_state.selected_model
            if current_model_in_state in DEFAULT_MODELS:
                 default_model_index = DEFAULT_MODELS.index(current_model_in_state)
            else:
                 default_model_index = 0 # –ï—Å–ª–∏ —Ç–µ–∫—É—â–µ–π –º–æ–¥–µ–ª–∏ –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ, –±–µ—Ä–µ–º –ø–µ—Ä–≤—É—é
        except ValueError:
            default_model_index = 0

        selected_model_input = st.selectbox(
            "–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å",
            options=DEFAULT_MODELS,
            index=default_model_index,
            key="model_select_widget", # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á –¥–ª—è –≤–∏–¥–∂–µ—Ç–∞
            help="–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –¥–ª—è –æ–±—â–µ–Ω–∏—è. –°–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π –Ω–∞ OpenRouter: https://openrouter.ai/models"
        )
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –º–æ–¥–µ–ª—å, –µ—Å–ª–∏ –æ–Ω–∞ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å
        if selected_model_input != st.session_state.selected_model:
            st.session_state.selected_model = selected_model_input
            config["last_selected_model"] = selected_model_input
            save_config(config)
            # –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º rerun(), —Å–º–µ–Ω–∞ –ø—Ä–∏–º–µ–Ω–∏—Ç—Å—è –ø—Ä–∏ —Å–ª–µ–¥. –∑–∞–ø—Ä–æ—Å–µ
    else:
        st.warning("–°–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π –ø—É—Å—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å—Ç–µ –º–æ–¥–µ–ª–∏ –≤ DEFAULT_MODELS –≤ –∫–æ–¥–µ.")
        st.session_state.selected_model = "" # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –º–æ–¥–µ–ª—å

    st.divider()

    # –ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏
    st.subheader("–ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ó–∞–≥–æ–ª–æ–≤–∫–∏ (–¥–ª—è —Ä–µ–π—Ç–∏–Ω–≥–∞)")
    site_url_input = st.text_input(
        "Your Site URL (HTTP-Referer)",
        value=st.session_state.site_url,
        key="site_url_input_widget",
        help="–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ. URL –≤–∞—à–µ–≥–æ —Å–∞–π—Ç–∞/–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."
    )
    if site_url_input != st.session_state.site_url:
        st.session_state.site_url = site_url_input
        config["site_url"] = site_url_input
        save_config(config)

    site_name_input = st.text_input(
        "Your Site Name (X-Title)",
        value=st.session_state.site_name,
        key="site_name_input_widget",
        help="–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ. –ù–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ —Å–∞–π—Ç–∞/–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."
    )
    if site_name_input != st.session_state.site_name:
        st.session_state.site_name = site_name_input
        config["site_name"] = site_name_input
        save_config(config)

    st.divider()

    # –ö–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏ —á–∞—Ç–∞
    if st.button("üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞"):
        st.session_state.messages = []
        st.rerun() # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É, —á—Ç–æ–±—ã –æ—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç

    st.caption(f"–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤: {os.path.abspath(CONFIG_FILE)}")
    st.caption("‚ö†Ô∏è –ö–ª—é—á API —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ —Ñ–∞–π–ª–µ –ª–æ–∫–∞–ª—å–Ω–æ. –ù–µ –ø–µ—Ä–µ–¥–∞–≤–∞–π—Ç–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª –¥—Ä—É–≥–∏–º.")

# --- –û—Å–Ω–æ–≤–Ω–∞—è –æ–±–ª–∞—Å—Ç—å —á–∞—Ç–∞ ---

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π —á–∞—Ç–∞ –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏
for message in st.session_state.messages:
    with st.chat_message(message["role"]):
        st.markdown(message["content"])

# –ü–æ–ª–µ –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
if prompt := st.chat_input("–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è API –∫–ª—é—á–∞ –∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏
    if not st.session_state.api_key:
        st.warning("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à OpenRouter API Key –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö (–±–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å).")
        st.stop()
    if not st.session_state.selected_model:
         st.warning("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö (–±–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å).")
         st.stop()

    # –î–æ–±–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏—Å—Ç–æ—Ä–∏—é –∏ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å
    st.session_state.messages.append({"role": "user", "content": prompt})
    with st.chat_message("user"):
        st.markdown(prompt)

    # –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å
    with st.chat_message("assistant"):
        message_placeholder = st.empty() # –ó–∞–ø–æ–ª–Ω–∏—Ç–µ–ª—å –¥–ª—è –æ—Ç–≤–µ—Ç–∞
        full_response = "" # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –∏–ª–∏ –æ—à–∏–±–∫–∏
        try:
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ OpenAI –¥–ª—è OpenRouter
            client = openai.OpenAI(
                base_url=OPENROUTER_BASE_URL,
                api_key=st.session_state.api_key,
                # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ç–∞–π–º–∞—É—Ç—ã, –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—Å—ã –¥–æ–ª–≥–∏–µ
                # timeout=30.0,
                # max_retries=2,
            )

            # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
            extra_headers = {}
            if st.session_state.site_url:
                 extra_headers["HTTP-Referer"] = st.session_state.site_url
            if st.session_state.site_name:
                 extra_headers["X-Title"] = st.session_state.site_name

            # –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ —Å —Ç–µ–∫—É—â–µ–π –∏—Å—Ç–æ—Ä–∏–µ–π —Å–æ–æ–±—â–µ–Ω–∏–π
            completion = client.chat.completions.create(
                model=st.session_state.selected_model,
                messages=[
                    {"role": m["role"], "content": m["content"]}
                    for m in st.session_state.messages # –ë–µ—Ä–µ–º –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é
                ],
                extra_headers=extra_headers if extra_headers else None,
                extra_body={}, # –ö–∞–∫ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ OpenRouter
                # stream=False # –ü–æ–∫–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç—Ä–∏–º–∏–Ω–≥ –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã
            )

            # --- –ù–ê–î–ï–ñ–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –û–¢–í–ï–¢–ê ---
            if completion and completion.choices and len(completion.choices) > 0:
                first_choice = completion.choices[0]
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ message –∏ content –≤–Ω—É—Ç—Ä–∏ –Ω–µ–≥–æ
                if hasattr(first_choice, 'message') and first_choice.message and hasattr(first_choice.message, 'content') and first_choice.message.content is not None:
                    # –í—Å–µ –≤ –ø–æ—Ä—è–¥–∫–µ, –∏–∑–≤–ª–µ–∫–∞–µ–º –æ—Ç–≤–µ—Ç
                    full_response = first_choice.message.content
                    message_placeholder.markdown(full_response) # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –æ—Ç–≤–µ—Ç
                else:
                    # –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞ (–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç message –∏–ª–∏ content)
                    error_message = "–û—à–∏–±–∫–∞: API –≤–µ—Ä–Ω—É–ª –æ—Ç–≤–µ—Ç, –Ω–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞."
                    # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å —Ö–æ—Ç—å –∫–∞–∫–æ–π-—Ç–æ —Ç–µ–∫—Å—Ç –∏–∑ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
                    finish_reason = getattr(first_choice, 'finish_reason', 'N/A')
                    error_detail = f"Finish reason: {finish_reason}. Message object: {getattr(first_choice, 'message', 'N/A')}"
                    st.error(f"{error_message} {error_detail}")
                    st.warning(f"–ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç API (choice[0]): {first_choice}") # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á–∞—Å—Ç—å –æ—Ç–≤–µ—Ç–∞
                    full_response = f"–û—à–∏–±–∫–∞: {error_message}"
                    message_placeholder.error(full_response) # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –æ—à–∏–±–∫—É –≤ —á–∞—Ç–µ
            else:
                # –°–ø–∏—Å–æ–∫ 'choices' –ø—É—Å—Ç –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –æ—Ç–≤–µ—Ç–µ
                error_message = "–û—à–∏–±–∫–∞: API –Ω–µ –≤–µ—Ä–Ω—É–ª –æ–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç (–æ—Ç–≤–µ—Ç –ø—É—Å—Ç –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω)."
                st.error(error_message)
                st.warning(f"–ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç API: {completion}") # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–µ—Å—å –æ—Ç–≤–µ—Ç
                full_response = f"–û—à–∏–±–∫–∞: {error_message}"
                message_placeholder.error(full_response) # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –æ—à–∏–±–∫—É –≤ —á–∞—Ç–µ

        # --- –ë–õ–û–ö–ò –û–ë–†–ê–ë–û–¢–ö–ò –û–®–ò–ë–û–ö API ---
        except openai.AuthenticationError:
            error_message = "–û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ (401). –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–∞—à–µ–≥–æ API –∫–ª—é—á–∞ OpenRouter."
            message_placeholder.error(error_message)
            full_response = f"–û—à–∏–±–∫–∞: {error_message}"
        except openai.PermissionDeniedError: # –ß–∞—Å—Ç–æ –±—ã–≤–∞–µ—Ç –ø—Ä–∏ –Ω–µ—Ö–≤–∞—Ç–∫–µ –∫—Ä–µ–¥–∏—Ç–æ–≤
             error_message = "–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ (403). –í–æ–∑–º–æ–∂–Ω–æ, —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫—Ä–µ–¥–∏—Ç–æ–≤ –∏–ª–∏ –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π –º–æ–¥–µ–ª–∏."
             message_placeholder.error(error_message)
             full_response = f"–û—à–∏–±–∫–∞: {error_message}"
        except openai.NotFoundError:
            error_message = f"–û—à–∏–±–∫–∞: –ú–æ–¥–µ–ª—å '{st.session_state.selected_model}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ (404) –Ω–∞ OpenRouter –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞."
            message_placeholder.error(error_message)
            full_response = f"–û—à–∏–±–∫–∞: {error_message}"
        except openai.RateLimitError:
             error_message = "–û—à–∏–±–∫–∞: –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ (429) –Ω–∞ OpenRouter. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–∏–º–∏—Ç—ã –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞."
             message_placeholder.error(error_message)
             full_response = f"–û—à–∏–±–∫–∞: {error_message}"
        except openai.APIConnectionError as e:
            error_message = f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ OpenRouter: {e}. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API."
            message_placeholder.error(error_message)
            full_response = f"–û—à–∏–±–∫–∞: {error_message}"
        except openai.APIStatusError as e: # –õ–æ–≤–∏–º –¥—Ä—É–≥–∏–µ –æ—à–∏–±–∫–∏ HTTP (5xx, 4xx)
            error_message = f"–û—à–∏–±–∫–∞ API OpenRouter (HTTP {e.status_code}): {e.message}"
            st.error(f"–ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—à–∏–±–∫–∏ API: {e.response.text}") # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–ª–æ –æ—Ç–≤–µ—Ç–∞
            message_placeholder.error(error_message)
            full_response = f"–û—à–∏–±–∫–∞: {error_message}"
        except openai.APIError as e: # –û–±—â–∞—è –æ—à–∏–±–∫–∞ OpenAI/OpenRouter
            error_message = f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ–±—â–∞—è –æ—à–∏–±–∫–∞ API OpenRouter: {e}"
            message_placeholder.error(error_message)
            full_response = f"–û—à–∏–±–∫–∞: {error_message}"
        except Exception as e:
            # --- –õ–û–í–ò–ú –í–°–ï –û–°–¢–ê–õ–¨–ù–´–ï –û–®–ò–ë–ö–ò ---
            error_type = type(e).__name__
            error_message = f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {error_type}: {e}"
            st.error(error_message)
            st.error("Traceback:")
            # –í—ã–≤–æ–¥–∏–º –ø–æ–ª–Ω—ã–π traceback –≤ –∫–æ–Ω—Å–æ–ª—å –∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ª–µ–≥–∫–æ–π –æ—Ç–ª–∞–¥–∫–∏
            traceback_str = traceback.format_exc()
            print(traceback_str) # –í –∫–æ–Ω—Å–æ–ª—å —Å–µ—Ä–≤–µ—Ä–∞ Streamlit
            st.code(traceback_str) # –í –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            full_response = f"–û—à–∏–±–∫–∞: {error_message}"
            message_placeholder.error(f"{full_response}\n(–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ —Å–º. –≤ –ª–æ–≥–∞—Ö –∏–ª–∏ –≤—ã—à–µ)") # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫—Ä–∞—Ç–∫—É—é –æ—à–∏–±–∫—É –≤ —á–∞—Ç–µ

    # –î–æ–±–∞–≤–∏—Ç—å —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ (–∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ) –≤ –∏—Å—Ç–æ—Ä–∏—é
    st.session_state.messages.append({"role": "assistant", "content": full_response})
